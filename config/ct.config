[
    {hpr, [
        {packet_reporter, #{
            access_key_id => <<"testkey">>,
            secret_access_key => <<"testsecret">>,
            region => <<"local">>,
            bucket => <<"test-bucket">>,
            interval_duration => 300000,
            write_dir => "/var/data/hpr/tmp/",
            max_file_size => 50_000_000,
            upload_window => 900000,
            localstack_host => <<"localstack">>,
            localstack_port => <<"4566">>
        }},
        {config_worker, #{
            host => "localhost",
            port => 50051,
            file_backup_path => "/var/data/hpr/config_worker.backup"
        }}
    ]},
    {grpcbox, [
        {client, #{channels => [{default_channel, [{http, "localhost", 8080, []}], #{}}]}}
    ]},
    {lager, [
        {suppress_supervisor_start_stop, true},
        {log_root, "log/hpr"},
        {crash_log, "crash.log"},
        {handlers, [
            {lager_console_backend, [
                {level, debug},
                {formatter_config, [
                    "time=",
                    date,
                    "T",
                    time,
                    " lvl=",
                    severity_upper,
                    " ",
                    metadata,
                    " msg=\"",
                    message,
                    "\"",
                    "\n"
                ]}
            ]},
            {lager_file_backend, [
                {file, "debug.log"},
                {level, debug},
                {size, 0},
                {date, "$D0"},
                {count, 7},
                {formatter_config, [
                    "time=",
                    date,
                    "T",
                    time,
                    " lvl=",
                    severity_upper,
                    " ",
                    metadata,
                    " msg=\"",
                    message,
                    "\"",
                    "\n"
                ]}
            ]}
        ]}
    ]},
    {prometheus, [
        {collectors, [
            prometheus_boolean,
            prometheus_counter,
            prometheus_gauge,
            prometheus_histogram,
            prometheus_vm_memory_collector,
            prometheus_vm_system_info_collector
        ]},
        {vm_system_info_collector_metrics, [process_count]}
    ]}
].
